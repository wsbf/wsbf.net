/**
 * @file dev/server.js
 * @author Ben Shealy
 *
 * A simple web server for the development environment, built
 * with NodeJS and Express.
 *
 * Run `npm start` in the project directory to start this server,
 * and go to "localhost:8080" in the browser to test the client
 * code. This server will serve static files, provide dummy responses
 * for some API methods, and for the rest of the API it will serve
 * static responses out of `/dev/api`, which can be generated by
 * running `dev/fetch-json.sh`.
 */
"use strict";

var fs = require("fs");
var path = require("path");
var express = require("express");
var logger = require("morgan");
var bodyParser = require("body-parser");

var DOC_ROOT = "./client";

// initialize app
var app = express();

// initialize middleware
app.use(logger("dev"));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

// define routes
var authenticated = true;

app.get("/api/defs.php", function(req, res, next) {
	var tablePath = path.join(__dirname, "api/defs", req.query.table);

	fs.readFile(tablePath, "utf-8", function(err, data) {
		if ( err ) {
			return next(err);
		}

		res.send(data);
	});
});

app.post("/api/auth/login.php", function(req, res, next) {
	if ( req.body.username && req.body.password ) {
		authenticated = true;
		res.send("/dj/");
	}
	else {
		next();
	}
});

app.get("/api/auth/logout.php", function(req, res) {
	authenticated = false;
	res.redirect("/login/");
});

app.post("/api/auth/register.php", function(req, res) {
	res.status(200).end();
});

app.post("/api/auth/password_request.php", function(req, res) {
	res.status(200).end();
});

app.post("/api/auth/password_reset.php", function(req, res) {
	res.status(200).end();
});

app.post("/api/schedule/show.php", function(req, res) {
	res.status(200).end();
});

app.get("/api/users/user.php", function(req, res, next) {
	if ( !authenticated ) {
		res.status(401).end();
	}
	else {
		next();
	}
});

app.get("/blog/:route?", function(req, res) {
	res.redirect("https://wsbf.net/blog/" + (req.params.route || ""));
});

app.get("/camera/:route?", function(req, res) {
	res.redirect("https://wsbf.net/camera/" + (req.params.route || ""));
});

app.get("/stream/:route?", function(req, res) {
	res.redirect("https://wsbf.net/stream/" + (req.params.route || ""));
});

app.use("/api", express.static(path.join(__dirname, "api")));
app.use("/", express.static(DOC_ROOT));

// define 404 handler
app.use(function(req, res) {
	res.status(404).send("Not Found: " + req.originalUrl);
});

// define error handler
app.use(function(err, req, res, next) {
	if ( res.headersSent ) {
		return next(err);
	}

	res.status(500).send({ message: err.message });
});

// start HTTP web server
app.listen(8080);
